#!/usr/bin/env ansible-playbook
#
# (c) 2017 DataNexus Inc.  All Rights Reserved
---
# Build our `{{application}}` (target) and kafka host groups
- name: Create telegraf and kafka host groups
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars/telegraf.yml
  tasks:
    # always load the 'local variables file', if one was defined, to get any
    # variables we might need from that file when constructing our host groups
    - name: Load local variables file
      include_vars:
        file: "{{local_vars_file}}"
      when: not (local_vars_file is undefined or local_vars_file is none or local_vars_file | trim == '')
    # regardless of whether the `application` value is still set to the default
    # `telegraf` value from the `vars/telegraf.yml` file or was reset in the
    # input `local_vars_file` (above), set a fact for the `localhost` so that
    # we can use it in our third play (below) to define the target hosts that
    # we are provisioning with Telegraf agents to using this playbook
    - set_fact:
        application: "{{application}}"
    # if we're using dynamic provisioning; build the host groups from the
    # meta-data associated with the matching nodes in the selected cloud
    - include_role:
        name: build-app-host-groups
      vars:
        host_group_list:
          - { name: "{{application}}", filter_roles: "{{'false' | bool}}" }
          - name: kafka
      when: cloud is defined and (cloud == 'aws' or cloud == 'osp')

# Collect the 'hostvars' facts from the kafka host group
- name: Gather facts from kafka host group
  hosts: kafka
  tasks: []

# Then, deploy our Telegraf agents to the nodes in the application host group
# that was passed in (or 'the 'telegraf' host group if a separate `application`
# target wasn't defined in the local variables file)
- name: Install/configure telegraf agents
  hosts: "{{hostvars['localhost']['application']}}"
  gather_facts: no
  vars_files:
    - vars/telegraf.yml
  vars:
    - combined_package_list: "{{ (default_packages|default([])) | union(telegraf_package_list|default([])) | union((install_packages_by_tag|default({})).telegraf|default([])) }}"
    - kafka_nodes: "{{groups['kafka']}}"
  pre_tasks:
    # first, initialize the play by loading any `local_vars_file` that may have
    # been passed in, restarting the network on the target nodes (if desired),
    # and determining the `data_iface` and `api_iface` values from the input
    # `iface_description_array` (if one was passed in)
    - include_role:
        name: initialize-play
    # and now that we know the name of our `data_iface`, we can construct the
    # list of zk_nodes (the data_iface IP addresses of our zookeeper_nodes)
    - set_fact:
        kfka_nodes: "{{(kafka_nodes | default([])) | map('extract', hostvars, [('ansible_' + data_iface), 'ipv4', 'address']) | list}}"
  roles:
    # first add the InfluxDB package repository to the list of repositories
    # used on our target nodes
    - role: add-package-repo
      package_name: influxdb
      repo_name: "InfluxDB Repository"
      repo_url: "https://repos.influxdata.com/rhel/$releasever/$basearch/stable"
      repo_key_url: "https://repos.influxdata.com/influxdb.key"
    # then, deploy Telegraf agents (for logs and metrics) to the new nodes
    # (i.e. those that don't already have Telegraf agents deployed to them)
    - role: add-nodes
      service_deployed: telegraf-metrics
      application_deployed: telegraf
